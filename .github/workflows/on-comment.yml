name: On Comment

on:
  issue_comment:
    types: [created]

jobs:
  on-comment:
    runs-on: ubuntu-latest

    outputs:
      add-nong: ${{ steps.check-comment.outputs.add-nong }}
      reject: ${{ steps.check-comment.outputs.reject }}
      authenticated: ${{ steps.check-comment.outputs.authenticated }}
      reviewer: ${{ steps.check-comment.outputs.reviewer }}

    steps:
      - name: Check comment
        id: check-comment
        run: |
          users=("FlafyDev" "Daepicgdplayer" "elnexreal" "SpuckwasserDE" "AlwaysJolly" "IMGer4" "vsaucing" "LousyBook-01" "om3ga6400" "neprao" "Lostconscious" "gdhpsk" "M336G" "Cosmo304" "comicsteel")

          for user in "${users[@]}"; do
            if [ "$(jq -r .comment.user.login $GITHUB_EVENT_PATH)" = "$user" ]; then
              echo "authenticated=true" >> $GITHUB_OUTPUT
              echo "reviewer=$(jq -r .comment.user.login $GITHUB_EVENT_PATH) <$(jq -r .comment.user.id $GITHUB_EVENT_PATH)+$(jq -r .comment.user.login $GITHUB_EVENT_PATH)@users.noreply.github.com>" >> $GITHUB_OUTPUT
            fi
          done

          comment_body=$(jq -r .comment.body "$GITHUB_EVENT_PATH")

          if echo "$comment_body" | grep -q '^accept'; then
              echo "add-nong=true" >> "$GITHUB_OUTPUT"
          fi

          if echo "$comment_body" | grep -q '^reject'; then
              echo "reject=true" >> "$GITHUB_OUTPUT"

  on-comment-reject-nong:
    runs-on: ubuntu-latest

    needs: on-comment
    if: needs.on-comment.outputs.authenticated == 'true' && needs.on-comment.outputs.reject == 'true'

    steps:
      - uses: ahmadnassri/action-workflow-queue@v1

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate token
        uses: wow-actions/use-app-token@v2
        id: generate_token
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Close issue
        run: gh issue close ${{ github.event.issue.number }} --reason "not planned"
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.BOT_TOKEN }}

  on-comment-adding-nong:
    runs-on: ubuntu-latest

    needs: on-comment
    if: needs.on-comment.outputs.authenticated == 'true' && needs.on-comment.outputs.add-nong == 'true'

    steps:
      - uses: ahmadnassri/action-workflow-queue@v1

      - name: Generate token
        uses: wow-actions/use-app-token@v2
        id: generate_token
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ steps.generate_token.outputs.BOT_TOKEN }}

      - name: Parse issue template
        uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/add-nong-song.yml

      - name: Evaluate issue
        id: evaluate-issue
        run: ./.github/generate-nong-issue-json.bash

      - name: Generate issue message and commit details
        id: generate-details
        run: |
          echo "author_name=$(jq -r .issue.user.login $GITHUB_EVENT_PATH)" >> $GITHUB_OUTPUT
          echo "author_email=$(jq -r .issue.user.id $GITHUB_EVENT_PATH)+$(jq -r .issue.user.login $GITHUB_EVENT_PATH)@users.noreply.github.com" >> $GITHUB_OUTPUT

          echo "song_name=$(jq -r .name result.json)" >> $GITHUB_OUTPUT
          echo "artist_name=$(jq -r .artist result.json)" >> $GITHUB_OUTPUT

          cat > body.md << EOF
          Added $(jq -r .name result.json) to Auto Nong âœ¨
          EOF

      - name: Make changes
        id: make-changes
        run: |
          jq --argjson newObject "$(cat result.json)" '. += [$newObject]' official.json > temp.json && mv temp.json official.json

      - name: Bot details
        id: bot-details
        uses: raven-actions/bot-details@v1
        with:
          bot-slug-name: auto-nong

      - name: Add and commit
        uses: EndBug/add-and-commit@v9
        with:
          add: 'official.json'
          author_name: ${{ steps.generate-details.outputs.author_name }}
          author_email: ${{ steps.generate-details.outputs.author_email }}
          committer_name: ${{ steps.bot-details.outputs.name }}
          committer_email: ${{ steps.bot-details.outputs.email }}
          message: |
            official: Add ${{ steps.generate-details.outputs.song_name }} by ${{ steps.generate-details.outputs.artist_name }}

            fixes: #${{ github.event.issue.number }}

            Reviewed-by: ${{ needs.on-comment.outputs.reviewer }}

      - name: Create comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.issue.number }}
          body-path: body.md
          token: ${{ steps.generate_token.outputs.BOT_TOKEN }}
